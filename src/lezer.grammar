@precedence {comment @left, foreign @right, action @right, definition @left}

@top   PhiGrammar {PROGRAM}

// @skip { SPACE } 

@tokens {  
  COMMENT{ HASH ![\r\n]*}
  META{ PLUS NAME (space ![\r\n]+)?}
  
  STAR{ "*"}
  CONST{ "!"}
  COLON{ ":"}
  COPY{ "\'"}
  VERTEX{ "<"}
  ROOT{ 'Q'}
  SIGMA{ "&"}
  XI{ "$"}
  // QUESTION{ "?"}

  REGEX{ SLASH ![\r\n]+ SLASH}
  DOTS{ "..."}
  SLASH{ "/"}
  ARROW{ ">"}
  PLUS{ "+"}
  MINUS{ "-"}
  DOT{ "."}
  space{" "}
  LSQ[closedBy="RSQ"]{ "[" }
  RSQ[openedBy="LSQ"]{ "]"}
  LB[closedBy="RB"]{ "("}
  RB[openedBy="LB"]{ ")"}
  AT{ "@"}
  RHO{ "^"}
  HASH{ "#"}

  BYTE{ ($[0-9A-F])($[0-9A-F])}
  EMPTY_BYTES { MINUS MINUS}
  LINE_BYTES { BYTE (MINUS BYTE)*}

  BYTES {
      EMPTY_BYTES
    | LINE_BYTES
  }

  
  INT { (PLUS | MINUS)? ($[0-9] | $[1-9] $[0-9]+)}

  EXP { "e" (PLUS | MINUS)? $[0-9]+ }

  FLOAT { INT DOT $[0-9]* EXP?}

  BOOL{ "TRUE" | "FALSE"}
  CHAR{  "\'" (!["\\\r\n] | ESCAPE_SEQUENCE) "\'"}
  STRING{ "\"" (!["\\\r\n] | ESCAPE_SEQUENCE)* "\""}
  ESCAPE_SEQUENCE {
        "\\" $[btnfr"'\\]
      | "\\" ($[01]$[0-9]$[0-9] | "2"$[0-4]$[0-9] | "25" $[0-5])
      | "\\" "u" BYTE BYTE
  }
  
  HEX{ "0x" ($[0-9a-f])+}

  NAME{ $[a-z] ($[a-z0-9]| $[_-])*}
  FOREIGN_NAME {$[a-z] ($[a-z0-9]| $[_-])*}

  TEXT_MARK{ "\"\"\""}
  TEXT{
      TEXT_MARK ("\n" | "\r\n")
      (![\\] | ESCAPE_SEQUENCE)*?
      TEXT_MARK
  }

  EOL {"\n"}

  @precedence {FLOAT, INT, HEX, BYTES, META}
  @precedence {TEXT, STRING}
  @precedence {REGEX, SLASH}
}

LICENSE
{
  (
    (!comment COMMENT)
    EOL
  )+
}

METAS
{
  (
    META
    EOL
  )+
}

DATA
{
  BYTES
  |
  BOOL
  |
  TEXT
  |
  STRING
  |
  INT
  |
  FLOAT
  |
  HEX
  |
  CHAR
  |
  REGEX
}

NAME_AT
{
  NAME
  |
  AT
}

DECLARATION
{
  // 
  NAME_AT
  CONST?
  (
    !foreign
    (
      space
      SLASH
      FOREIGN_NAME
    )
  )?
  space
  ARROW
  (
    space
    LSQ
    (
      NAME
      (
        space
        NAME
      )*
      DOTS?
    )?
    RSQ
  )?
}

METHOD
{
  ID
  (
    DOT
    ID
  )+
  DECLARATION?
}


HEAD
{
  ROOT
  |
  AT
  |
  RHO
  |
  XI
  |
  SIGMA
  |
  STAR
  |
  NAME
}

HAS
{
  COLON
  NAME
}

PROGRAM
{
  LICENSE?
  METAS?
  EOL?
  OBJECTS
}
  
SPACES {space*}

OBJECTS
{
  (
    (
      !comment COMMENT 
      EOL
    )*
    OBJECT
    // EOL
  )+
}

// --------------------------------
// main non-terminals
// --------------------------------

OBJECT
{
  DECLARATION
  EOL
  (
    !definition
    (
      DEFINITION
      EOL
    )
  )*
}

// .name | name.name.
// maybe need to add ^
ACTION
{
  DOT
  NAME_AT
  |
  (
    !action
    (
      NAME_AT
      DOT
    )
  )+
  NAME_AT?
}

DEFINITION
{
  SPACES
  (
    OBJECT
    |
    (
      ACTION
      (
        space
        INLINE
      )?
    )
    |
    DATA
  )
}


PARENTHESIZED
{
  LB
  INLINE
  RB
  (
    !definition
    (
      DOT
      NAME_AT
    )
  )*
}

MAYBE_INVERSE
{
  (
    !action
    (
      NAME_AT
      DOT
    )
  )*
  NAME_AT?
}

INLINE_TOKEN
{
  PARENTHESIZED
  |
  DATA
  |
  MAYBE_INVERSE
}

INLINE
{
  INLINE_TOKEN
  (
    space
    INLINE_TOKEN
  )*
}